@layout LoginLayout
@page "/"



<div class="login">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="login__wave__svg__top"><path fill="#003366 " fill-opacity="1" d="M0,288L720,64L1440,192L1440,320L720,320L0,320Z"></path></svg>
    <div class="login__header">
        <label class="login__header__logo">Incident Management</label>
        <div class="login__header__links">
            <a href="#">About</a>
            <a href="#">Help <i class="bi bi-question-circle"></i></a>
        </div>
    </div>

    <div class="login__container">
        <div class="login__form">
            <label class="login__form__subtext">Hello,</label>
            <h1 class="login__form__title typing-animation">Welcome Back!</h1>
            <p class="login__form__description">
                Please log in to access and manage incidents, track resolutions, and ensure timely responses.
                Your efforts help us maintain smooth operations and improve service efficiency.
                Enter your credentials to get started.
            </p>
            <EditForm Model="UserModel" OnValidSubmit="Authenticate" FormName="LoginForm" class="login__form__form">
                <DataAnnotationsValidator />
                <InputText type="text" @bind-Value="UserModel.Username" placeholder="Username" required class="login__form__input" />
                <InputText type="password" @bind-Value="UserModel.Password" placeholder="Password" required class="login__form__input" />
                <div class="login__errorMessage @((errorMessage != null) ? "login__form__errorMessage" : "")">
                    <span>@errorMessage</span>
                </div>
                <button type="submit" class="login__form__submit-btn">Login</button>
            </EditForm>
        </div>

        <div class="login__form__image__container">
            <img src="/assets/login/robot face-pana.png" class="login__form__image" />
        </div>

    </div>

    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="login__wave__svg__bottom"><path fill="#003366 " fill-opacity="1" d="M0,288L720,64L1440,192L1440,320L720,320L0,320Z"></path></svg>

    <div class="login__footer">
        <label>
            &copy; 2024 All Right Reserved
        </label>
        <label>Version 1.0</label>
    </div>
</div>





@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    [SupplyParameterFromForm]
    public Users_TBL UserModel { get; set; } = new Users_TBL();
    private string? errorMessage;

    private async Task Authenticate()
    {
        // var userAccount = dataContext.Users_TBL.Where(x => x.Username == UserModel.Username).FirstOrDefault();
        var userAccount = dataContext.Users_TBL
        .AsEnumerable()
        .FirstOrDefault(x => x.Username == UserModel.Username);
        if (userAccount is null || userAccount.Password != UserModel.Password)
        {
            errorMessage = "*Invalid Username or Password";
            return;
        };
        var claims = new List<Claim> {
            new Claim(ClaimTypes.Name, UserModel.Username),
            new Claim(ClaimTypes.Role, userAccount.Role),
            new Claim(ClaimTypes.NameIdentifier, userAccount.User_ID.ToString())
        };
        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await HttpContext.SignInAsync(principal);
        navigationManager.NavigateTo("/dashboard");
    }

}