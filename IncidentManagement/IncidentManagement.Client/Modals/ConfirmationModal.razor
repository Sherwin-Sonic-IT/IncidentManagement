@rendermode @(new InteractiveAutoRenderMode(false))

<div class="confirmation__modal__overlay @(isConfirmationModalVisible ? "show__confirmation__modal" : "hide__confirmation__modal" )">
    <div class="confirmation__modal">
        <div class="confirmation__modal__header">
            <h5 class="confirmation__modal__header__title">INCIDENT ID : @SelectedIncidentID</h5>
        </div>
        <div class="confirmation__modal__body">
            <h5>Are you sure want to delete?</h5>
        </div>
        <div class="confirmation__modal__footer">
            <button type="button" class="confirmation__modal__btn confirmation__modal__btn-cancel" @onclick="CloseModal">Cancel</button>
            <button type="button" class="confirmation__modal__btn confirmation__modal__btn-delete" @onclick="ConfirmDelete">Delete</button>
        </div>
    </div>
</div>

@code {
    private List<Incidents_TBL> ReturnIncident { get; set; } = new();
    [Parameter] public string Incident_ID { get; set; }
    [Parameter] public int SelectedIncidentID { get; set; }
    [Parameter] public bool isConfirmationModalVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(Incident_ID))
        {
            if (int.TryParse(Incident_ID, out var parsedID))
            {
                await IncidentService.GetIncidentByIdAsync(parsedID);
            }
            else
            {
                Console.WriteLine($"Invalid ID format: {Incident_ID}");
            }
        }
    }
 
    private async void CloseModal()
    {
        await OnClose.InvokeAsync(null);
    }

    private async Task ConfirmDelete()
    {
        try
        {
            await IncidentService.DeleteIncidentAsync(SelectedIncidentID);
            Console.WriteLine($"Incident {SelectedIncidentID} deleted successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to delete incident with ID: {SelectedIncidentID}. Incident not found. Error: {ex.Message}");
        }
            await OnConfirm.InvokeAsync(null);
            CloseModal();
    }

}


